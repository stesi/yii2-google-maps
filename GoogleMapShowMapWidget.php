<?php

namespace stesi\googlemaps;

use yii\base\Widget;
use Yii;
use yii\base\Model;
use yii\helpers\ArrayHelper;
use yii\helpers\Html;
use yii\helpers\Json;
use yii\web\JsExpression;
use yii\widgets\InputWidget;


/**
 * Class GoogleMapDirectionWidget
 * @package stesi\googlemaps
 */
class GoogleMapShowMapWidget extends Widget
{
    public $coords;
    public $latitude;
    public $longitude;

    /**
     * @var array options for map wrapper div
     */
    public $wrapperOptions;
    /**
     * @var array options for attribute text input
     */
    public $textOptions = ['class' => 'form-control'];
    public $defaultMarkerIcon;
    /**
     * @var array JavaScript options
     */
    public $jsOptions = [];

    /**
     * @var callable function for custom map render
     */
    public $renderWidgetMap;

    /**
     * @var string Google API Key for Google Maps
     */
    public $googleMapApiKey;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->id = uniqid('map_');
        $defaultMarker = !empty($this->defaultMarkerIcon) ? ['defaultMarkerIcon' => $this->defaultMarkerIcon] : [];
        $this->jsOptions = ArrayHelper::merge($this->jsOptions , [
            'latitude' =>  $this->latitude,
            'longitude'  =>  $this->longitude,
        ], $defaultMarker);
    }
    /**
     * Run widget
     */
    public function run()
    {

        parent::run();
        if (!isset($this->wrapperOptions)) {
            $this->wrapperOptions = [];
        }
        if (!isset($this->wrapperOptions['id'])) {
            $this->wrapperOptions['id'] = $this->id;
        }
        if (!isset($this->wrapperOptions['style'])) {
            $this->wrapperOptions['style'] = 'width: 100%; height: 500px;';
        }
        $this->view->registerJs(new JsExpression('            
                $(\'#' . $this->wrapperOptions['id'] . '\').showMap(' . Json::encode($this->jsOptions) . ');           
        '));
        $mapHtml = Html::tag('div', '', $this->wrapperOptions);

        return $mapHtml;
    }
}
